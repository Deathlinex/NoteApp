<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAcAAAAPAAAAFzExMR8xMTEfAAAAFwAAAA8AAAAHAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCoq
        KhivsbFjzc7Oqdvc3Nji4+P15OTk/uTk5P7i4+P129zc2M3OzqmvsbFjKioqGAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATdC
        QhfBw8OF4ODg6eTk5P/i4uL/4eHh/+Dg4P/f39//39/f/+Dg4P/h4eH/4uLi/+Tk5P/g4eHpwcPDhTU/
        PxgAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AASfoqJI3d3d3ePj4//g4OD/39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/+Dg
        4P/j4+P/3d3d3Z+iokgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEubu7auPk5Pjh4eH/39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f
        3//f39//39/f/9/f3//h4eH/4+Tk+Lm5uWsAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAru9vWnk5OT84ODg/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f
        3//f39//39/f/9/f3//f39//39/f/9/f3//g4OD/5OTk/L29vWkAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACrr69D4+Tk+ODg4P/f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f
        3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//g4OD/4+Tk+Kuvr0MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAT19fEN/f39vh4eH/39/f/9/f3//P187/ssmt/7LJrf+yya3/w9HA/9/f
        3/+oz+X/qM/l/6jP5f+qz+X/39/f/+PNuv/lw6X/5cOl/+XDpf/h1sz/39/f/9/f3//h4eH/3t/f3E9f
        XxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADPz8984+Pj/9/f3//f39//39/f/7HIq/9ankr/Wp5K/1qe
        Sv+MtoL/39/f/zyw8/87sPT/O7D0/z+x8//f39//7Klv//SLMv/0izL/9Isy/+XEp//f39//39/f/9/f
        3//j4+P/ztDQfQAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVDOHh4ejg4OD/39/f/9/f3//f39//scir/1qe
        Sv9ankr/Wp5K/4y2gv/f39//PLDz/zuw9P87sPT/P7Hz/9/f3//sqW//9Isy//SLMv/0izL/5cSn/9/f
        3//f39//39/f/+Dg4P/h4uLoVVVVDAAAAAAAAAAAAAAAAAAAAADMzMxV5OTk/9/f3//f39//39/f/9/f
        3/+xyKv/Wp5K/1qeSv9ankr/jLaC/9/f3/88sPP/O7D0/zuw9P8/sfP/39/f/+ypb//0izL/9Isy//SL
        Mv/lxKf/39/f/9/f3//f39//39/f/+Tk5P/Mz89VAAAAAAAAAAAAAAAAAAAAANra2p/i4uL/39/f/9/f
        3//f39//39/f/8LQvv+LtoH/i7aB/4u2gf+rxaT/39/f/3jB7P93wez/d8Hs/3rC6//f39//572Z/+yq
        cv/sqnL/7Kpy/+POvP/f39//39/f/9/f3//f39//4uLi/9rb258AAAAAAAAAAAAAAAAAAAAC4ODg0+Hh
        4f/f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f
        3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//h4eH/3+Dg1AAAAAIAAAAAAAAAAAAA
        AATj4+P04ODg/9/f3//f39//39/f/9/f3/+nz+b/PbDz/z2w8/89sPP/e8Lr/9/f3//zjTb/84w1//OM
        Nf/yjjr/39/f/3B75f8zQ+n/M0Pp/zND6f+oreL/39/f/9/f3//f39//39/f/+Dg4P/j5OT0AAAABAAA
        AAAAAAAAc4uLC+Tk5P7f39//39/f/9/f3//f39//39/f/6bO5v87sPT/O7D0/zuw9P95wev/39/f//OL
        M//0izL/9Isy//ONN//f39//bnnm/zBB6v8wQer/MEHq/6es4v/f39//39/f/9/f3//f39//39/f/+Tk
        5P6Li4sLAAAAAAAAAAB/mZkK5OTk/t/f3//f39//39/f/9/f3//f39//ps7m/zuw9P87sPT/O7D0/3nB
        6//f39//84sz//SLMv/0izL/8403/9/f3/9ueeb/MEHq/zBB6v8wQer/p6zi/9/f3//f39//39/f/9/f
        3//f39//5OTk/pmZmQoAAAAAAAAAAAAAAALj4+P04ODg/9/f3//f39//39/f/9/f3/+nz+b/PrDz/z6w
        8/8+sPP/e8Lr/9/f3//zjTb/84w1//OMNf/yjzr/39/f/3B75f8zROn/M0Tp/zNE6f+oreL/39/f/9/f
        3//f39//39/f/+Dg4P/j5OT0AAAAAgAAAAAAAAAAAAAAAOLi4tHh4eH/39/f/9/f3//f39//39/f/9/f
        3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f
        3//f39//39/f/9/f3//f39//4eHh/+Lk5NEAAAAAAAAAAAAAAAAAAAAA4eLimeLi4v/f39//39/f/9/f
        3//f39//48y5/+ypcf/sqXH/7Klx/+e+m//f39//cXvl/3B75f9we+X/c37l/9/f3/+pxKL/i7WA/4u1
        gP+LtYD/xNHA/9/f3//f39//39/f/9/f3//i4uL/4eLimgAAAAAAAAAAAAAAAAAAAADd4eFN5OTk/9/f
        3//f39//39/f/9/f3//mwqP/9Isy//SLMv/0izL/66tz/9/f3/8xQun/MEHq/zBB6v81Ren/39/f/4m1
        f/9ankr/Wp5K/1qeSv+0yq//39/f/9/f3//f39//39/f/+Tk5P/h4eFNAAAAAAAAAAAAAAAAAAAAAMzM
        zAXk5OTl4eHh/9/f3//f39//39/f/+bCo//0izL/9Isy//SLMv/rq3P/39/f/zFC6f8wQer/MEHq/zVF
        6f/f39//ibV//1qeSv9ankr/Wp5K/7TKr//f39//39/f/9/f3//h4eH/5OTk5czMzAUAAAAAAAAAAAAA
        AAAAAAAAAAAAAOHj43Hk5OT/39/f/9/f3//f39//5sKj//SLMv/0izL/9Isy/+urc//f39//MULp/zBB
        6v8wQer/NUXp/9/f3/+JtX//Wp5K/1qeSv9ankr/tMqv/9/f3//f39//39/f/+Tk5P/j4+NxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1NTUBuPk5Nbi4uL/39/f/9/f3//h1cv/5cOl/+XDpf/lw6X/4827/9/f
        3/+lq+L/pari/6Wq4v+mrOL/39/f/8LRv/+zya3/s8mt/7PJrf/Q2M//39/f/9/f3//i4uL/5OTk1tTU
        1AYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4OXlMuTk5Pfg4OD/39/f/9/f3//f39//39/f/9/f
        3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//4ODg/+Tk
        5Pfh4eEzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4eTkVuTk5Pzg4OD/39/f/9/f
        3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/+Dg
        4P/k5OT85OfnVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4eTkVuTk
        5Pfi4uL/39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f
        3//i4uL/5OTk9+Tn51YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4OXlMuTl5dXk5OT/4eHh/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f
        3//h4eH/5OTk/+Pk5Nbl5eUyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1NTUBuPl5XDk5eXk5OTk/+Li4v/h4eH/4ODg/9/f3//f39//4ODg/+Hh
        4f/i4uL/5OTk/+Xl5eTj5eVw1NTUBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wTj5+dL4+Xll+Pl5c/j5OTz5OTk/uTk
        5P7j5OTz4+Xlz+Pl5Zfj5+dL////BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADU//8G1P//BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////gB///gAH//gAAf/wAAD/4AAAf8AAAD/AAAA/gAAAH4AAAB8AA
        AAPAAAADwAAAA4AAAAGAAAABgAAAAYAAAAGAAAABwAAAA8AAAAPAAAADwAAAA+AAAAfgAAAH8AAAD/gA
        AB/8AAA//gAAf/8AAP//wAP///5///////8=
</value>
  </data>
</root>